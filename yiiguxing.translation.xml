<application>
  <component name="Translation.Cache">
    <option name="lastTrimTime" value="1717394968348" />
  </component>
  <component name="Translation.Settings">
    <option name="primaryLanguage" value="AUTO" />
    <option name="translator" value="YOUDAO" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="appId" value="63ef6b32109b1630" />
      </youdao-translate>
    </option>
  </component>
  <component name="Translation.States">
    <histories>
      <item value="f&quot;Unable to read workbook: could not {action} from {self.archive.filename}.\n&quot; &quot;This is most probably because the workbook source files contain some invalid XML.\n&quot; &quot;Please see the exception for more details.&quot;" />
      <item value="&quot;&quot;&quot;Open the given filename and return the workbook" />
      <item value="def load_workbook(filename, read_only=False, keep_vba=KEEP_VBA, data_only=False, keep_links=True, rich_text=False): &quot;&quot;&quot;Open the given filename and return the workbook :param filename: the path to open or a file-like object :type filename: string or a file-like object open in binary mode c.f., :class:`zipfile.ZipFile` :param read_only: optimised for reading, content cannot be edited :type read_only: bool :param keep_vba: preserve vba content (this does NOT mean you can use it) :type keep_vba: bool :param data_only: controls whether cells with formulae have either the formula (default) or the value stored the last time Excel read the sheet :type data_only: bool :param keep_links: whether links to external workbooks should be preserved. The default is True :type keep_links: bool :param rich_text: if set to True openpyxl will preserve any rich text formatting in cells. The default is False :type rich_text: bool :rtype: :class:`openpyxl.workbook.Workbook` .. note:: When using lazy load, all worksheets will be :class:`openpyxl.worksheet.iter_worksheet.IterableWorksheet` and the returned workbook will be read-only. &quot;&quot;&quot; reader = ExcelReader(filename, read_only, keep_vba, data_only, keep_links, rich_text) reader.read() return reader.wb" />
      <item value="self.loaded_theme = None self.vba_archive = None" />
      <item value="&quot;&quot;&quot;Workbook is the top-level container for all document information.&quot;&quot;&quot;" />
      <item value="&quot;&quot;&quot;Workbook is the container for all other parts of the document.&quot;&quot;&quot;" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="7" />
        <entry key="ENGLISH" value="7" />
      </map>
    </option>
  </component>
</application>